{"version":3,"sources":["Home.js","gesture_components/A.js","gesture_components/B.js","MotionTracking.js","ASL.js","Merriam.js","train_test/ImageTesting.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","href","target","rel","alt","aGesture","GestureDescription","addCurl","Finger","Thumb","FingerCurl","NoCurl","addDirection","FingerDirection","VirticalUp","DiagonalUpLeft","DiagonalUpRight","Index","Middle","Ring","Pinky","finger","FullCurl","bGesture","VerticalUp","MotionTracking","useState","symbol","setSymbol","useEffect","videoBlock","document","getElementsByClassName","videoElement","canvasElement","canvasCtx","getContext","stopCam","getElementById","symbolSpacing","toggle","style","opacity","hands","Hands","locateFile","file","onResults","results","save","clearRect","width","height","drawImage","image","multiHandLandmarks","multiHandedness","index","isRightHand","label","landmarks","drawConnectors","HAND_CONNECTIONS","color","drawLandmarks","fillColor","a","gestureEstimate","fp","estimate","undefined","gesture","gestures","length","name","restore","camera","Camera","onFrame","send","start","onclick","console","log","stream","srcObject","getTracks","stop","display","innerHTML","id","ASL","autoPlay","type","Merriam","dictionary","setDictionary","currentWord","setCurrentWord","displayWord","setDisplayWord","setDefinition","pronunciationSource","setPronunciationSource","Merriam_URL","API_KEY","pronounce","useRef","axios","get","timeout","res","data","word","JSON","stringify","def","error","GetEnglishWord","e","preventDefault","hwi","prs","sound","audio","current","pause","load","changePronunciation","onChange","value","onSubmit","title","placeholder","fl","hw","controls","ref","src","fs","require","withNodeSleep","promisify","setTimeout","App","to","path","forEach","char","then","mkdir","i","writeFile","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ff35f813.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Home() {\r\n\r\nconst ASL_Alphabet = \"https://www.nidcd.nih.gov/health/american-sign-language-fingerspelling-alphabets-image\"\r\n\r\nreturn(\r\n        <main>\r\n            <div className=\"general-spacing site-background\">\r\n                <header>\r\n                    <h1 className=\"title\">tri-sense</h1>\r\n                </header>\r\n                <div className=\"basic-margin center-text\">\r\n                <a href={ ASL_Alphabet } target=\"_blank\" rel=\"noreferrer\" alt=\"American Sign Language Alphabet\">ASL Alphabet</a>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import { Finger, FingerCurl, FingerDirection, GestureDescription } from \"fingerpose\";\r\n\r\nexport const aGesture = new GestureDescription(\"A\");\r\n\r\n//Thumb\r\naGesture.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\naGesture.addDirection(Finger.Thumb, FingerDirection.VirticalUp, 0.25);\r\naGesture.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.5);\r\naGesture.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 0.5);\r\n\r\n// Other four fingers\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\r\n    aGesture.addCurl(finger, FingerCurl.FullCurl, 1.0);\r\n}","import { Finger, FingerCurl, FingerDirection, GestureDescription } from \"fingerpose\";\r\n\r\nexport const bGesture = new GestureDescription(\"B\");\r\n\r\n//Thumb\r\nbGesture.addCurl(Finger.Thumb, FingerCurl.FullCurl, 1.0);\r\nbGesture.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 0.25);\r\nbGesture.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.5);\r\nbGesture.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 0.5);\r\n\r\n// Other four fingers\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\r\n    bGesture.addCurl(finger, FingerCurl.NoCurl, 1.0);\r\n}","import { HAND_CONNECTIONS, Hands } from \"@mediapipe/hands/hands\";\r\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\r\n// import { FPS } from \"@mediapipe/control_utils/control_utils\";\r\nimport { drawConnectors, drawLandmarks } from \"@mediapipe/drawing_utils/drawing_utils\";\r\nimport * as fp from \"fingerpose\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { aGesture } from \"./gesture_components/A\"\r\nimport { bGesture } from \"./gesture_components/B\";\r\n\r\nexport default function MotionTracking() {\r\n\r\n  const [symbol, setSymbol] = useState(null);\r\n  // Input frames\r\n\r\nuseEffect(() => {\r\n  const videoBlock = document.getElementsByClassName(\"video-canvas-spacing\")[0];\r\n  const videoElement =\r\n      document.getElementsByClassName(\"video-size\")[0];\r\n  const canvasElement =\r\n      document.getElementsByClassName(\"canvas-area\")[0];\r\n  /* const controlsElement =\r\n      document.getElementsByClassName('control-panel')[0]; */\r\n  const canvasCtx = canvasElement.getContext(\"2d\");\r\n  const stopCam = document.getElementById(\"stop-webcam\");\r\n  const symbolSpacing = document.getElementById(\"symbolSpacing\");\r\n  let toggle = false;\r\n  symbolSpacing.style.opacity = \"0\";\r\n\r\n  // Call tick() each time the graph runs.\r\n  // const fpsControl = new FPS();\r\n\r\n  // Optimization: Turn off animated spinner after its hiding animation is done.\r\n  /* const spinner = document.querySelector('.loading');\r\n  spinner.ontransitionend = () => {\r\n    spinner.style.display = 'none';\r\n  }; */\r\n\r\n  function onResults(results) {\r\n    // Hide the spinner.\r\n  //  document.body.classList.add('loaded');\r\n\r\n    // Update the frame rate.\r\n  // fpsControl.tick();\r\n\r\n    // Draw the overlays.\r\n    canvasCtx.save();\r\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n    canvasCtx.drawImage(\r\n        results.image, 0, 0, canvasElement.width, canvasElement.height);\r\n    if (results.multiHandLandmarks && results.multiHandedness) {\r\n      for (let index = 0; index < results.multiHandLandmarks.length; index++) {\r\n        const classification = results.multiHandedness[index];\r\n        const isRightHand = classification.label === 'Right';\r\n        const landmarks = results.multiHandLandmarks[index];\r\n        drawConnectors(\r\n            canvasCtx, landmarks, HAND_CONNECTIONS,\r\n            {color: isRightHand ? '#00FF00' : '#FF0000'});\r\n        drawLandmarks(canvasCtx, landmarks, {\r\n          color: isRightHand ? '#00FF00' : '#FF0000',\r\n          fillColor: isRightHand ? '#FF0000' : '#00FF00'\r\n        });\r\n        // determines which hand gesture is present\r\n        (async function handGestures() {\r\n          const gestureEstimate = new fp.GestureEstimator([\r\n            aGesture,\r\n            bGesture\r\n          ])\r\n          const gesture = await gestureEstimate.estimate(landmarks, 1.0);\r\n          if(gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n          symbolSpacing.style.opacity = \"1\";\r\n          setSymbol(gesture.gestures[0].name);\r\n          // console.log(gesture.gestures);\r\n          }\r\n        })();\r\n      }\r\n\r\n    }\r\n    \r\n    canvasCtx.restore();\r\n  }\r\n\r\n  const hands = new Hands({locateFile: (file) => {\r\n    return `https://cdn.jsdelivr.net/npm/@mediapipe/hands@0.1/${file}`;\r\n  }});\r\n  hands.onResults(onResults);\r\n\r\n  /**\r\n  * Instantiate a camera. We'll feed each frame we receive into the solution.\r\n  */\r\n  const camera = new Camera(videoElement, {\r\n    onFrame: async () => {\r\n      await hands.send({image: videoElement});\r\n    },\r\n    height: \"25rem\",\r\n    width: \"30rem\"\r\n  });\r\n  camera.start();\r\n\r\n  // allows the client to toggle the webcam\r\n\r\n  stopCam.onclick = stopWebcam;\r\n\r\n  function stopWebcam() {\r\n          console.log(toggle)\r\n          let stream = videoElement.srcObject;\r\n          if(stream !== null && toggle === false) {\r\n              let tracks = stream.getTracks();\r\n              tracks[0].stop()\r\n              videoBlock.style.display = \"none\";\r\n              videoElement.srcObject = null;\r\n              stopCam.innerHTML = \"start webcam\";\r\n              symbolSpacing.style.opacity = \"0\";\r\n              return toggle = true;\r\n          } else {\r\n              camera.start();\r\n              videoBlock.style.display = \"block\";\r\n              return toggle = false;\r\n          }\r\n      }\r\n\r\n  // Present a control panel through which the user can manipulate the solution\r\n  // options.\r\n  /* new ControlPanel(controlsElement, {\r\n        selfieMode: true,\r\n        maxNumHands: 2,\r\n        minDetectionConfidence: 0.5,\r\n        minTrackingConfidence: 0.5\r\n      })\r\n      .add([\r\n        new StaticText({title: 'MediaPipe Hands'}),\r\n        fpsControl,\r\n        new Toggle({title: 'Selfie Mode', field: 'selfieMode'}),\r\n        new Slider(\r\n            {title: 'Max Number of Hands', field: 'maxNumHands', range: [1, 4], step: 1}),\r\n        new Slider({\r\n          title: 'Min Detection Confidence',\r\n          field: 'minDetectionConfidence',\r\n          range: [0, 1],\r\n          step: 0.01\r\n        }),\r\n        new Slider({\r\n          title: 'Min Tracking Confidence',\r\n          field: 'minTrackingConfidence',\r\n          range: [0, 1],\r\n          step: 0.01\r\n        }),\r\n      ])\r\n      .on(options => {\r\n        videoElement.classList.toggle('selfie', options.selfieMode);\r\n        hands.setOptions(options);\r\n      }); */\r\n})\r\n    return(\r\n      <div id=\"symbolSpacing\">{ symbol }</div>\r\n    )\r\n}","import React from \"react\";\r\nimport MotionTracking from \"./MotionTracking\";\r\n\r\nexport default function ASL() {\r\n\r\n\r\nconst ASL_Alphabet = \"https://www.nidcd.nih.gov/health/american-sign-language-fingerspelling-alphabets-image\"\r\n\r\nreturn(\r\n        <main>\r\n            <div className=\"general-spacing site-background\">\r\n                <header>\r\n                    <h1 className=\"title\">tri-sense</h1>\r\n                </header>\r\n                <div className=\"basic-margin center-text\">\r\n                <a href={ ASL_Alphabet } target=\"_blank\" rel=\"noreferrer\" alt=\"American Sign Language Alphabet\">ASL Alphabet</a>\r\n                </div>\r\n            </div>\r\n            <div className=\"canvas-area-relative\">\r\n                <div className=\"video-canvas-spacing\">\r\n                    <div className=\"video-area\">\r\n                        <video className=\"video-size\" autoPlay={ true } alt=\"American Sign Language Chat App Motion Tracking\"></video>\r\n                        <canvas className=\"canvas-area\"></canvas>\r\n                    </div>\r\n                </div>\r\n                <div className=\"center-text\">\r\n                    <button type=\"button\" id=\"stop-webcam\">stop webcam</button>\r\n                </div>\r\n                { MotionTracking() }\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Merriam() {\r\n    \r\n    const [dictionary, setDictionary] = useState(null);\r\n    const [currentWord, setCurrentWord] = useState(null);\r\n    const [displayWord, setDisplayWord] = useState(null);\r\n    const [definition, setDefinition] = useState(null);\r\n    const [pronunciationSource, setPronunciationSource] = useState(\"https://media.merriam-webster.com/audio/prons/en/us/mp3/a/apple001.mp3\");\r\n    const Merriam_URL = \"https://www.dictionaryapi.com/api/v3/references/collegiate/json/\";\r\n    const API_KEY = \"?key=b6d6ef59-ebe9-4fb1-9e9b-970c1e954392\";\r\n    const ASL_Alphabet = \"https://www.nidcd.nih.gov/health/american-sign-language-fingerspelling-alphabets-image\"\r\n    const pronounce = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        async function GetEnglishWord() {\r\n            try {\r\n            const res = await axios.get(Merriam_URL + \"apple\" + API_KEY, {\r\n                    timeout: 2000,\r\n                    })\r\n                console.log(res.data);\r\n                setDisplayWord(\"apple\");\r\n                setDictionary({ word: res.data })\r\n                setDefinition(JSON.stringify(res.data[0].def[0]))\r\n                // setDefinition(res.data[0].def[0].sseq[0][0][1].dt[0][1])\r\n            } catch (err) {\r\n                console.error(err);\r\n            } finally {\r\n                console.log(\"An initial Merriam Webster Dictionary API GET call attempt was made\")\r\n            }    \r\n        }\r\n\r\n        GetEnglishWord();\r\n\r\n    }, [])\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setCurrentWord(e.target.value || \"a\");\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(currentWord !== null) {\r\n            try {\r\n                const res = await axios.get(Merriam_URL + currentWord + API_KEY, {\r\n                    timeout: 2000,\r\n                    })\r\n                console.log(res.data);\r\n                setDisplayWord(currentWord);\r\n                setDictionary({ word: res.data })\r\n                const changePronunciation = () => {\r\n                setPronunciationSource(`https://media.merriam-webster.com/audio/prons/en/us/mp3/${res.data[0].hwi.prs[0].sound.audio[0]}/${res.data[0].hwi.prs[0].sound.audio}.mp3`);\r\n                setDefinition(JSON.stringify(res.data[0].def[0]))\r\n                    if(pronounce.current) {\r\n                        pronounce.current.pause();\r\n                        pronounce.current.load();\r\n                    }\r\n                }\r\n                changePronunciation();\r\n            } catch (err) {\r\n                console.error(err);\r\n            } finally {\r\n                console.log(\"Another Merriam Webster Dictionary API GET call attempt was made\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <main>\r\n\r\n            <div className=\"general-spacing site-background\">\r\n                <header>\r\n                    <h1 className=\"title\">tri-sense</h1>\r\n                </header>\r\n                <div className=\"basic-margin center-text\">\r\n                <a href={ ASL_Alphabet } target=\"_blank\" rel=\"noreferrer\" alt=\"American Sign Language Alphabet\">ASL Alphabet</a>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-and-word-block site-background\">\r\n                <form className=\"basic-margin\" \r\n                    onChange={ handleChange }\r\n                    onSubmit={ handleSubmit }\r\n                >\r\n                    <label title=\"Search Word\"><input type=\"text\" placeholder=\"search word\" /></label>\r\n                    <label title=\"Pronunciation Search\"><input className=\"submit-word\" type=\"submit\" value=\"Click for Pronunciation\" /></label>\r\n                </form>\r\n                <div className=\"word-block\">\r\n                    {dictionary && \r\n                    <div>\r\n                    <h2 className=\"word\">{ displayWord }:</h2>\r\n                        <div>\r\n                            <p className=\"part-of-speech\">({dictionary.word[0].fl})</p>\r\n                        </div>\r\n                        {pronunciationSource &&\r\n                        <div>\r\n                            <h3>Pronuciation: { dictionary.word[0].hwi.hw }</h3>\r\n                            <audio controls ref={ pronounce } className=\"audio-block\"> \r\n                                <source src= { pronunciationSource } type=\"audio/mp3\" />\r\n                            </audio>\r\n                        </div>}\r\n                        {/* // definition to use in appropriate cases considering high level of navigation specificity\r\n                        <div>\r\n                            <p>{ definition }</p>\r\n                        </div> */}\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}","const fs = require(\"fs\");\r\nconst { promisify } = require(\"util\");\r\nconst withNodeSleep = promisify(setTimeout);\r\n/* const inBrowserSleep = (milliseconds) => {\r\n    return new Promise(res => setTimeout(res, milliseconds))\r\n} */\r\n\r\nconst labels = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r\nconst numOfImages = 21;\r\n// let totalImages = 0;\r\n// let imageCapture;\r\n// const captureButton = document.querySelector(\"button\");\r\n\r\n// let mediaStream = null;\r\n/* (async function getUserMedia() {\r\n    try {\r\n        mediaStream = await navigator.mediaDevices.getUserMedia({video: { width:1280, height:720 }})\r\n        document.querySelector(\"video\").srcObject = mediaStream;\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n})(); */\r\n\r\n// captureButton.onclick = takeScreenShots;\r\n\r\n/* function takeScreenShots() {\r\n    const track = mediaStream.getVideoTracks()[0];\r\n    imageCapture = new ImageCapture(track);\r\n    saveImages();\r\n} */\r\n\r\n\r\n// creates directories and files based on the developer's wanted labels using Node.js\r\n\r\n function saveImages() {\r\n    labels.forEach((char) => {\r\n        withNodeSleep(1000).then(() => fs.mkdir(`../images/${char}`, () => null),\r\n        (async function populateDirs() {\r\n            for(let i = 1; i < numOfImages; i++) {\r\n                await withNodeSleep(1000).then(() => {fs.writeFile(`../images/${char}/label_${char}_${i.toString()}.png`,\"utf8\", () => null);\r\n                })\r\n            }\r\n        })(),\r\n    )})\r\n}\r\nsaveImages();","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\nimport Home from \"./Home\";\nimport ASL from \"./ASL\";\nimport Merriam from \"./Merriam\";\nimport \"./App.css\";\nimport \"./train_test/ImageTesting\";\n\nexport default function App() {\n\n  return (\n        <Router>\n            <div className=\"general-spacing\">\n              <nav className=\"center-text\">\n                <span className=\"general-spacing\">\n                    <Link to=\"/Home\">Home</Link>\n                </span>\n                <span className=\"general-spacing\">\n                    <Link to=\"/ASL\">ASL Chat App</Link>\n                </span>\n                <span className=\"general-spacing\">\n                    <Link to=\"/Merriam\">Pronunciation App</Link>\n                </span>\n              </nav>\n\n              <Switch>\n                <Route path=\"/ASL\">\n                  <ASL />\n                </Route>\n                <Route path=\"/Merriam\">\n                  <Merriam />\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n            </div>\n        </Router>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nif (process.env.NODE_ENV !== 'production') {\n  let axe = require('react-axe');\n  axe(React, ReactDOM, 1000);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}