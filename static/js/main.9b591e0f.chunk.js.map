{"version":3,"sources":["Home.js","ASL.js","MotionTracking.js","Merriam.js","train_test/ImageTesting.js","App.js","reportWebVitals.js","index.js"],"names":["Home","className","href","target","rel","alt","ASL","useEffect","videoBlock","document","getElementsByClassName","videoElement","canvasElement","canvasCtx","getContext","stopCam","getElementById","toggle","hands","Hands","locateFile","file","onResults","results","save","clearRect","width","height","drawImage","image","multiHandLandmarks","multiHandedness","index","length","isRightHand","label","landmarks","drawConnectors","HAND_CONNECTIONS","color","drawLandmarks","fillColor","restore","camera","Camera","onFrame","a","send","start","onclick","console","log","stream","srcObject","getTracks","stop","style","display","innerHTML","MotionTracking","autoPlay","type","id","Merriam","useState","dictionary","setDictionary","currentWord","setCurrentWord","displayWord","setDisplayWord","setDefinition","pronunciationSource","setPronunciationSource","Merriam_URL","API_KEY","pronounce","useRef","axios","get","timeout","res","data","word","JSON","stringify","def","error","GetEnglishWord","e","preventDefault","hwi","prs","sound","audio","current","pause","load","changePronunciation","onChange","value","onSubmit","title","placeholder","fl","hw","controls","ref","src","fs","require","withNodeSleep","promisify","setTimeout","App","to","path","forEach","char","then","mkdir","i","writeFile","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9b591e0f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Home() {\r\n\r\nconst ASL_Alphabet = \"https://www.nidcd.nih.gov/health/american-sign-language-fingerspelling-alphabets-image\"\r\n\r\nreturn(\r\n        <main>\r\n            <div className=\"general-spacing site-background\">\r\n                <header>\r\n                    <h1 className=\"title\">tri-sense</h1>\r\n                </header>\r\n                <div className=\"basic-margin center-text\">\r\n                <a href={ ASL_Alphabet } target=\"_blank\" rel=\"noreferrer\" alt=\"American Sign Language Alphabet\">ASL Alphabet</a>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport MotionTracking from \"./MotionTracking\";\r\n\r\nexport default function ASL() {\r\n\r\nconst ASL_Alphabet = \"https://www.nidcd.nih.gov/health/american-sign-language-fingerspelling-alphabets-image\"\r\n\r\nuseEffect(() => {\r\n\r\n    MotionTracking();\r\n\r\n}, [])\r\n\r\nreturn(\r\n        <main>\r\n            <div className=\"general-spacing site-background\">\r\n                <header>\r\n                    <h1 className=\"title\">tri-sense</h1>\r\n                </header>\r\n                <div className=\"basic-margin center-text\">\r\n                <a href={ ASL_Alphabet } target=\"_blank\" rel=\"noreferrer\" alt=\"American Sign Language Alphabet\">ASL Alphabet</a>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className=\"video-canvas-spacing\">\r\n                    <div className=\"video-area\">\r\n                        <video className=\"video-size\" autoPlay={ true } alt=\"American Sign Language Chat App Motion Tracking\"></video>\r\n                        <canvas className=\"canvas-area\"></canvas>\r\n                    </div>\r\n                </div>\r\n                <div className=\"center-text\">\r\n                    <button type=\"button\" id=\"stop-webcam\">stop webcam</button>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}","import { HAND_CONNECTIONS, Hands } from \"@mediapipe/hands/hands\";\r\nimport { Camera } from \"@mediapipe/camera_utils/camera_utils\";\r\n// import { FPS } from \"@mediapipe/control_utils/control_utils\";\r\nimport { drawConnectors, drawLandmarks } from \"@mediapipe/drawing_utils/drawing_utils\";\r\n\r\nexport default function MotionTracking() {\r\n\r\n// Input frames\r\nconst videoBlock = document.getElementsByClassName(\"video-canvas-spacing\")[0];\r\nconst videoElement =\r\n    document.getElementsByClassName(\"video-size\")[0];\r\nconst canvasElement =\r\n    document.getElementsByClassName(\"canvas-area\")[0];\r\n/* const controlsElement =\r\n    document.getElementsByClassName('control-panel')[0]; */\r\nconst canvasCtx = canvasElement.getContext(\"2d\");\r\nconst stopCam = document.getElementById(\"stop-webcam\");\r\nlet toggle = false;\r\n\r\n// Call tick() each time the graph runs.\r\n// const fpsControl = new FPS();\r\n\r\n// Optimization: Turn off animated spinner after its hiding animation is done.\r\n/* const spinner = document.querySelector('.loading');\r\nspinner.ontransitionend = () => {\r\n  spinner.style.display = 'none';\r\n}; */\r\n\r\nfunction onResults(results) {\r\n  // Hide the spinner.\r\n//  document.body.classList.add('loaded');\r\n\r\n  // Update the frame rate.\r\n // fpsControl.tick();\r\n\r\n  // Draw the overlays.\r\n  canvasCtx.save();\r\n  canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n  canvasCtx.drawImage(\r\n      results.image, 0, 0, canvasElement.width, canvasElement.height);\r\n  if (results.multiHandLandmarks && results.multiHandedness) {\r\n    for (let index = 0; index < results.multiHandLandmarks.length; index++) {\r\n      const classification = results.multiHandedness[index];\r\n      const isRightHand = classification.label === 'Right';\r\n      const landmarks = results.multiHandLandmarks[index];\r\n      drawConnectors(\r\n          canvasCtx, landmarks, HAND_CONNECTIONS,\r\n          {color: isRightHand ? '#00FF00' : '#FF0000'});\r\n      drawLandmarks(canvasCtx, landmarks, {\r\n        color: isRightHand ? '#00FF00' : '#FF0000',\r\n        fillColor: isRightHand ? '#FF0000' : '#00FF00'\r\n      });\r\n    }\r\n  }\r\n  canvasCtx.restore();\r\n}\r\n\r\nconst hands = new Hands({locateFile: (file) => {\r\n  return `https://cdn.jsdelivr.net/npm/@mediapipe/hands@0.1/${file}`;\r\n}});\r\nhands.onResults(onResults);\r\n\r\n/**\r\n * Instantiate a camera. We'll feed each frame we receive into the solution.\r\n */\r\nconst camera = new Camera(videoElement, {\r\n  onFrame: async () => {\r\n    await hands.send({image: videoElement});\r\n  },\r\n  height: \"25rem\",\r\n  width: \"30rem\"\r\n});\r\ncamera.start();\r\n\r\n// allows the client to toggle the webcam\r\n\r\nstopCam.onclick = stopWebcam;\r\n\r\nfunction stopWebcam() {\r\n        console.log(toggle)\r\n        let stream = videoElement.srcObject;\r\n        if(stream !== null && toggle === false) {\r\n            let tracks = stream.getTracks();\r\n            tracks[0].stop()\r\n            videoBlock.style.display = \"none\";\r\n            videoElement.srcObject = null;\r\n            stopCam.innerHTML = \"start webcam\";\r\n            return toggle = true;\r\n        } else {\r\n            camera.start();\r\n            videoBlock.style.display = \"block\";\r\n            return toggle = false;\r\n        }\r\n    }\r\n\r\n// Present a control panel through which the user can manipulate the solution\r\n// options.\r\n/* new ControlPanel(controlsElement, {\r\n      selfieMode: true,\r\n      maxNumHands: 2,\r\n      minDetectionConfidence: 0.5,\r\n      minTrackingConfidence: 0.5\r\n    })\r\n    .add([\r\n      new StaticText({title: 'MediaPipe Hands'}),\r\n      fpsControl,\r\n      new Toggle({title: 'Selfie Mode', field: 'selfieMode'}),\r\n      new Slider(\r\n          {title: 'Max Number of Hands', field: 'maxNumHands', range: [1, 4], step: 1}),\r\n      new Slider({\r\n        title: 'Min Detection Confidence',\r\n        field: 'minDetectionConfidence',\r\n        range: [0, 1],\r\n        step: 0.01\r\n      }),\r\n      new Slider({\r\n        title: 'Min Tracking Confidence',\r\n        field: 'minTrackingConfidence',\r\n        range: [0, 1],\r\n        step: 0.01\r\n      }),\r\n    ])\r\n    .on(options => {\r\n      videoElement.classList.toggle('selfie', options.selfieMode);\r\n      hands.setOptions(options);\r\n    }); */\r\n\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Merriam() {\r\n    \r\n    const [dictionary, setDictionary] = useState(null);\r\n    const [currentWord, setCurrentWord] = useState(null);\r\n    const [displayWord, setDisplayWord] = useState(null);\r\n    const [definition, setDefinition] = useState(null);\r\n    const [pronunciationSource, setPronunciationSource] = useState(\"https://media.merriam-webster.com/audio/prons/en/us/mp3/a/apple001.mp3\");\r\n    const Merriam_URL = \"https://www.dictionaryapi.com/api/v3/references/collegiate/json/\";\r\n    const API_KEY = \"?key=b6d6ef59-ebe9-4fb1-9e9b-970c1e954392\";\r\n    const ASL_Alphabet = \"https://www.nidcd.nih.gov/health/american-sign-language-fingerspelling-alphabets-image\"\r\n    const pronounce = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        async function GetEnglishWord() {\r\n            try {\r\n            const res = await axios.get(Merriam_URL + \"apple\" + API_KEY, {\r\n                    timeout: 2000,\r\n                    })\r\n                console.log(res.data);\r\n                setDisplayWord(\"apple\");\r\n                setDictionary({ word: res.data })\r\n                setDefinition(JSON.stringify(res.data[0].def[0]))\r\n                // setDefinition(res.data[0].def[0].sseq[0][0][1].dt[0][1])\r\n            } catch (err) {\r\n                console.error(err);\r\n            } finally {\r\n                console.log(\"An initial Merriam Webster Dictionary API GET call attempt was made\")\r\n            }    \r\n        }\r\n\r\n        GetEnglishWord();\r\n\r\n    }, [])\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setCurrentWord(e.target.value || \"a\");\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if(currentWord !== null) {\r\n            try {\r\n                const res = await axios.get(Merriam_URL + currentWord + API_KEY, {\r\n                    timeout: 2000,\r\n                    })\r\n                console.log(res.data);\r\n                setDisplayWord(currentWord);\r\n                setDictionary({ word: res.data })\r\n                const changePronunciation = () => {\r\n                setPronunciationSource(`https://media.merriam-webster.com/audio/prons/en/us/mp3/${res.data[0].hwi.prs[0].sound.audio[0]}/${res.data[0].hwi.prs[0].sound.audio}.mp3`);\r\n                setDefinition(JSON.stringify(res.data[0].def[0]))\r\n                    if(pronounce.current) {\r\n                        pronounce.current.pause();\r\n                        pronounce.current.load();\r\n                    }\r\n                }\r\n                changePronunciation();\r\n            } catch (err) {\r\n                console.error(err);\r\n            } finally {\r\n                console.log(\"Another Merriam Webster Dictionary API GET call attempt was made\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <main>\r\n\r\n            <div className=\"general-spacing site-background\">\r\n                <header>\r\n                    <h1 className=\"title\">tri-sense</h1>\r\n                </header>\r\n                <div className=\"basic-margin center-text\">\r\n                <a href={ ASL_Alphabet } target=\"_blank\" rel=\"noreferrer\" alt=\"American Sign Language Alphabet\">ASL Alphabet</a>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-and-word-block site-background\">\r\n                <form className=\"basic-margin\" \r\n                    onChange={ handleChange }\r\n                    onSubmit={ handleSubmit }\r\n                >\r\n                    <label title=\"Search Word\"><input type=\"text\" placeholder=\"search word\" /></label>\r\n                    <label title=\"Pronunciation Search\"><input className=\"submit-word\" type=\"submit\" value=\"Click for Pronunciation\" /></label>\r\n                </form>\r\n                <div className=\"word-block\">\r\n                    {dictionary && \r\n                    <div>\r\n                    <h2 className=\"word\">{ displayWord }:</h2>\r\n                        <div>\r\n                            <p className=\"part-of-speech\">({dictionary.word[0].fl})</p>\r\n                        </div>\r\n                        {pronunciationSource &&\r\n                        <div>\r\n                            <h3>Pronuciation: { dictionary.word[0].hwi.hw }</h3>\r\n                            <audio controls ref={ pronounce } className=\"audio-block\"> \r\n                                <source src= { pronunciationSource } type=\"audio/mp3\" />\r\n                            </audio>\r\n                        </div>}\r\n                        {/* // definition to use in appropriate cases considering high level of navigation specificity\r\n                        <div>\r\n                            <p>{ definition }</p>\r\n                        </div> */}\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}","const fs = require(\"fs\");\r\nconst { promisify } = require(\"util\");\r\nconst withNodeSleep = promisify(setTimeout);\r\n/* const inBrowserSleep = (milliseconds) => {\r\n    return new Promise(res => setTimeout(res, milliseconds))\r\n} */\r\n\r\nconst labels = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\r\nconst numOfImages = 21;\r\n// let totalImages = 0;\r\n// let imageCapture;\r\n// const captureButton = document.querySelector(\"button\");\r\n\r\n// let mediaStream = null;\r\n/* (async function getUserMedia() {\r\n    try {\r\n        mediaStream = await navigator.mediaDevices.getUserMedia({video: { width:1280, height:720 }})\r\n        document.querySelector(\"video\").srcObject = mediaStream;\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n})(); */\r\n\r\n// captureButton.onclick = takeScreenShots;\r\n\r\n/* function takeScreenShots() {\r\n    const track = mediaStream.getVideoTracks()[0];\r\n    imageCapture = new ImageCapture(track);\r\n    saveImages();\r\n} */\r\n\r\n\r\n// creates directories and files based on the developer's wanted labels using Node.js\r\n\r\n function saveImages() {\r\n    labels.forEach((char) => {\r\n        withNodeSleep(1000).then(() => fs.mkdir(`../images/${char}`, () => null),\r\n        (async function populateDirs() {\r\n            for(let i = 1; i < numOfImages; i++) {\r\n                await withNodeSleep(1000).then(() => {fs.writeFile(`../images/${char}/label_${char}_${i.toString()}.png`,\"utf8\", () => null);\r\n                })\r\n            }\r\n        })(),\r\n    )})\r\n}\r\nsaveImages();","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\nimport Home from \"./Home\";\nimport ASL from \"./ASL\";\nimport Merriam from \"./Merriam\";\nimport \"./App.css\";\nimport \"./train_test/ImageTesting\";\n\nexport default function App() {\n\n  return (\n        <Router>\n            <div className=\"general-spacing\">\n              <nav className=\"center-text\">\n                <span className=\"general-spacing\">\n                    <Link to=\"/Home\">Home</Link>\n                </span>\n                <span className=\"general-spacing\">\n                    <Link to=\"/ASL\">ASL Chat App</Link>\n                </span>\n                <span className=\"general-spacing\">\n                    <Link to=\"/Merriam\">Pronunciation App</Link>\n                </span>\n              </nav>\n\n              <Switch>\n                <Route path=\"/ASL\">\n                  <ASL />\n                </Route>\n                <Route path=\"/Merriam\">\n                  <Merriam />\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n            </div>\n        </Router>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nif (process.env.NODE_ENV !== 'production') {\n  let axe = require('react-axe');\n  axe(React, ReactDOM, 1000);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}